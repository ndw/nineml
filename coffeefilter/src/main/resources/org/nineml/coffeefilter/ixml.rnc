namespace ixml = "http://invisiblexml.org/NS"

start = ixml

hex       = xsd:string { pattern = "[0-9a-fA-F]+" }
rangechar = xsd:string { pattern = "." }
rangehex  = xsd:string { pattern = "#[0-9a-fA-F]+" }
charclass = xsd:string { pattern = "[A-Z][A-Za-z]?" }
name      = xsd:NCName

s = comment*
sp = (comment|pragma)*

comment =
    element comment {
        (text|comment)*
    }

ixml =
    element ixml {
        attribute ixml:state { text }?,
        s,
        prolog?,
        (rule|s)+
    }

prolog =
    element prolog {
        version?,
        s,
        ppragma*,
        s
    }

version =
    element version {
        attribute \string { text },
        empty
    }

rule =
    element rule {
        attribute mark { "^" | "@" | "-" }?,
        attribute name { name },
        attribute rename { name }?,
        sp,
        alt+,
        sp
    }

alts =
    element alts {
        alt+,
        s
    }

alt =
    element alt {
        (literal | inclusion | exclusion
         | nonterminal
         | insertion
         | option
         | repeat0
         | repeat1
         | alts
         | s)*
    }

literal =
    element literal {
        attribute tmark { "^" | "-" }?,
        (
            attribute hex { hex }
          | attribute \string { text }
        ),
        sp
    }

inclusion =
    element inclusion {
        attribute tmark { "^" | "-" }?,
        s,
        member*,
        s
    }

exclusion =
    element exclusion {
        attribute tmark { "^" | "-" }?,
        s,
        member*,
        s
    }

member =
    element member {
        (
            attribute \string { text }
          | attribute hex { hex }
          | attribute code { charclass }
          | (attribute from { rangechar | rangehex }
             & attribute to { rangechar | rangehex })
        ),
        s
    }

nonterminal =
    element nonterminal {
        attribute mark { "^" | "@" | "-" }?,
        attribute name { name },
        attribute rename { name }?,
        sp
    }

insertion =
    element insertion {
        (
            attribute \string { text }
          | attribute hex { hex }
        ),
        s
    }

option =
    element option {
        (literal | inclusion | exclusion
         | nonterminal
         | insertion
         | option
         | repeat0
         | repeat1
         | alts),
        s
    }

repeat0 =
    element repeat0 {
        (literal | inclusion | exclusion
         | nonterminal
         | insertion
         | option
         | repeat0
         | repeat1
         | alts),
        s,
        sep?
    }

repeat1 =
    element repeat1 {
        (literal | inclusion | exclusion
         | nonterminal
         | insertion
         | option
         | repeat0
         | repeat1
         | alts),
        s,
        sep?
    }

sep =
    element sep {
        (literal | inclusion | exclusion
         | nonterminal
         | insertion
         | option
         | repeat0
         | repeat1
         | alts)
    }        
        
ppragma =
    element ppragma {
        attribute pname { name },
        pragma-data?
    }

pragma =
    element pragma {
        attribute pname { name },
        pragma-data?
}

pragma-data =
    element pragma-data {
        text 
    }
